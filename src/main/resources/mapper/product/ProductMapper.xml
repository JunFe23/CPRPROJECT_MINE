<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CPR.redHome.mapper.product.ProductMapper">

<select id="selectProduct" resultType="ProductViewDto" parameterType="java.lang.Long">


    select product_id              as productId,
           product_title           as productTitle,
           p.created_date          as createdDate,
           product_price           as productPrice,
           product_delivery_charge as productDeliveryCharge,
           product_quantity        as productQuantity,
           account_id              as accountId,
           product_category_name   as productCategoryName,
           p.product_theme_id      as productThemeId,
           product_theme_name      as productThemeName,
           product_description     as productDescription,
           product_main_image      as productMainImage,
           address                 as address
    from product p
             inner join product_theme pt on p.product_theme_id = pt.product_theme_id
             inner join product_category pc on p.product_category_id = pc.product_category_id
             inner join member m on p.member_id = m.member_id
    where p.product_id = ${productId}


</select>


<select id="selectProductImgList" resultType="ProductImageDto" parameterType="java.lang.Long">

    select product_image_id   as productImageId,
           product_img        as productImg,
           product_id         as productId
    from product_image
    where product_id = ${productId}


</select>


<select id="selectProductList" resultType="ProductViewDto">

    select product_id              as productId,
           product_title           as productTitle,
           p.created_date          as createdDate,
           product_price           as productPrice,
           product_delivery_charge as productDeliveryCharge,
           product_quantity        as productQuantity,
           account_id              as accountId,
           product_category_name   as productCategoryName,
           p.product_theme_id      as productThemeId,
           product_theme_name      as productThemeName,
           product_description     as productDescription,
           product_main_image      as productMainImage
    from product p
             inner join product_theme pt on p.product_theme_id = pt.product_theme_id
             inner join product_category pc on p.product_category_id = pc.product_category_id
             inner join member m on p.member_id = m.member_id

    <where>


        <if test="searchProductKeyword != null">
            product_title like CONCAT('%',#{searchProductKeyword},'%')
        </if>

        <if test="searchProductKeyword != null and deliveryChargeOPtion =='noCharge'">and</if>

        <if test="deliveryChargeOPtion == 'noCharge'">
            product_delivery_charge = 0
        </if>

        <if test="(searchProductKeyword != null or deliveryChargeOPtion =='noCharge') and productThemeNo != null">and</if>

        <if test="productThemeNo != null">
            p.product_theme_id = ${productThemeNo}
        </if>

    </where>

    <if test="storeOrder != 'best' and storeOrder != 'high' and storeOrder != 'low'">
        order by productId desc
    </if>
    <if test="storeOrder == 'best'">
        order by productQuantity asc
    </if>
    <if test="storeOrder == 'high'">
        order by productPrice desc
    </if>
    <if test="storeOrder == 'low'">
        order by productPrice asc
    </if>

    <if test="productThemeNo == null">
    limit 20
    </if>

</select>

<select id="selectSellerList" resultType="ProductViewDto">

    select product_id              as productId,
    product_title           as productTitle,
    p.created_date          as createdDate,
    product_price           as productPrice,
    product_delivery_charge as productDeliveryCharge,
    product_quantity        as productQuantity,
    account_id              as accountId,
    product_category_name   as productCategoryName,
    p.product_theme_id      as productThemeId,
    product_theme_name      as productThemeName,
    product_description     as productDescription,
    product_main_image      as productMainImage
    from (select * from product where member_id = #{memberId}) p
    inner join product_theme pt on p.product_theme_id = pt.product_theme_id
    inner join product_category pc on p.product_category_id = pc.product_category_id
    inner join member m on p.member_id = m.member_id

    <where>


        <if test="searchProductKeyword != null">
            product_title like CONCAT('%',#{searchProductKeyword},'%')
        </if>

        <if test="searchProductKeyword != null and deliveryChargeOPtion =='noCharge'">and</if>

        <if test="deliveryChargeOPtion == 'noCharge'">
            product_delivery_charge = 0
        </if>

        <if test="(searchProductKeyword != null or deliveryChargeOPtion =='noCharge') and productThemeNo != null">and</if>

        <if test="productThemeNo != null">
            p.product_theme_id = ${productThemeNo}
        </if>

    </where>

    <if test="storeOrder != 'best' and storeOrder != 'high' and storeOrder != 'low'">
        order by productId desc
    </if>
    <if test="storeOrder == 'best'">
        order by productQuantity asc
    </if>
    <if test="storeOrder == 'high'">
        order by productPrice desc
    </if>
    <if test="storeOrder == 'low'">
        order by productPrice asc
    </if>

    <if test="productThemeNo == null">
        limit 20
    </if>

</select>



<insert id="insertProductToCart" parameterType="cartDto">

    insert into shopping_cart(product_id, product_quantity, member_id)
    values( ${productId}, ${quantity}, ${memberId}  )

</insert>


<select id="selectShoppingCartNo" parameterType="java.lang.Long" resultType="java.lang.Long">

  select shopping_cart_id as cartId
  from shopping_cart
  where product_id = ${productId}
  order by cartId desc
  limit 1

</select>


</mapper>